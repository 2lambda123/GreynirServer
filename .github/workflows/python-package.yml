# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Greynir

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # Provide the password for postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
          PGPASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.9, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Icelandic locale
      run: |
          sudo locale-gen is_IS.UTF-8
          sudo update-locale
    - name: Install dependencies
      run: |
        pip install --upgrade pip wheel pytest curlylint
        pip install --upgrade git+https://github.com/mideind/Tokenizer#egg=tokenizer
        pip install --upgrade git+https://github.com/mideind/GreynirPackage#egg=reynir
        pip install --upgrade git+https://github.com/mideind/GreynirCorrect#egg=reynir-correct
        pip install -r requirements.txt
        sudo npm i -g jshint
        sudo apt-get install shellcheck
    - name: Populate database
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_PORT: 5432
        POSTGRES_HOST: localhost
        PGPASSWORD: postgres
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -c "create user reynir with password 'reynir';"
        PGPASSWORD=postgres psql -h localhost -U postgres -c "create database scraper with encoding 'UTF8' TEMPLATE=template0;"
        PGPASSWORD=postgres psql -h localhost -U postgres -d scraper -c "create extension if not exists \"uuid-ossp\";"
        python scraper.py --init
        psql -f tests/files/populate_testdb.sql postgresql://postgres:postgres@localhost:5432/scraper
    - name: Create dummy API key
      run: |
        cat "tests/files/dummy_greynir_api_key.txt" > "resources/GreynirServerKey.txt"
        cat "resources/GreynirServerKey.txt"
    - name: Test with pytest
      run: |
        python -m pytest
    - name: Run curlylint on templates
      run: |
        curlylint templates/*
        curlylint templates/*/*
    - name: Run jshint
      run: |
        jshint static/js/common.js
        jshint --prereq static/js/common.js static/js/page.js
    - name: Run shellcheck
      run: |
        shellcheck -x scripts/*.sh
    - name: Slack notification
      uses: 8398a7/action-slack@v2
      with:
        status: ${{ job.status }}
        author_name: Integration Testing (Python ${{ matrix.python-version }})
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: failure() # Pick up event if the job fails
