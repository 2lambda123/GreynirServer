
#
# greynir.is nginx proxy configuration file
#
# nginx is a proxy in front of Gunicorn, which runs the main Reynir server
#

# See https://github.com/benoitc/gunicorn/blob/master/examples/nginx.conf

proxy_cache_path /tmp/nginx levels=1:2 keys_zone=my_cache:256k max_size=10m
    inactive=10m use_temp_path=off;

upstream app_server {
    server unix:/usr/share/nginx/greynir.is/gunicorn.sock fail_timeout=0;
}

server {
    # If no host match, close the connection to prevent host spoofing
    listen 80 default_server;
    return 444;
}

server {

    listen   80 deferred; ## listen for ipv4; this line is default and implied
    listen   [::]:80 deferred ipv6only=on; ## listen for ipv6

    server_name greynir.is www.greynir.is;

    return 301 https://$server_name$request_uri; # Permanent redirect
}

server {

    listen   443 ssl;

    server_name greynir.is www.greynir.is;

    client_max_body_size 4G;

    root /usr/share/nginx/greynir.is;

    ssl_certificate         /etc/letsencrypt/live/greynir.is/fullchain.pem;
    # ssl_trusted_certificate /etc/letsencrypt/live/greynir.is/chain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/greynir.is/privkey.pem;
 
    # keepalive_timeout 5; # Set in nginx.conf to 70

    charset utf-8;

    access_log /usr/share/nginx/greynir.is/logs/access.log;

    location ~ \.api$ {
        # URLs ending with .api are not proxy cached or buffered
        proxy_pass http://app_server;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_buffering off;
        add_header Cache-control "no-cache";
    }

    location ~ \.(?:ttf|woff|svg|eot)$ {
        # Allow long-term caching of font files
        expires 30d;
        access_log off;
        add_header Cache-control "public";
    }

    location /static/ {
    }

    location /fonts/ {
    }

    location /.well-known/acme-challenge/ {
    }

    location = /robots.txt {
        root /usr/share/nginx/greynir.is/static;
    }

    location = /404.html {
        root /usr/share/nginx/greynir.is/static;
    }

    location = /500.html {
        root /usr/share/nginx/greynir.is/static;
    }

    location / {
        proxy_cache my_cache;
        proxy_cache_bypass $http_pragma;
        proxy_pass http://app_server;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        # proxy_buffering off;
        add_header X-Cache-Status $upstream_cache_status;
    }

    error_page 404 /404.html;

    # redirect server error pages to the static page /500.html
    
    error_page 500 502 503 504 /500.html;

}

